///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Mercy_Browserstack
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InternetApp recording.
    /// </summary>
    [TestModule("5f3ce998-0541-4382-a2c2-38bba518d357", ModuleType.Recording, 1)]
    public partial class InternetApp : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Mercy_BrowserstackRepository repository.
        /// </summary>
        public static Mercy_BrowserstackRepository repo = Mercy_BrowserstackRepository.Instance;

        static InternetApp instance = new InternetApp();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InternetApp()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InternetApp Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WelcomeToTheInternet' at 313;18.", repo.ApplicationUnderTest.WelcomeToTheInternetInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.WelcomeToTheInternet.Click("313;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -594 units.", new RecordItemIndex(1));
            Mouse.ScrollWheel(-594);
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.KeyPresses' at 84;7.", repo.ApplicationUnderTest.KeyPressesInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.KeyPresses.Click("84;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Target' at 396;10.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Target.Click("396;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Target' at 794;12.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Target.Click("794;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Hello' with focus on 'ApplicationUnderTest.Target'.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Target.PressKeys("Hello");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Target' at 217;20.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Target.Click("217;20");
            Delay.Milliseconds(0);
            
            try {
                Select_All_Text();
                Delay.Milliseconds(1000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence '{Back}' with focus on 'ApplicationUnderTest.Target'.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(8));
                repo.ApplicationUnderTest.Target.PressKeys("{Back}", 100);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'ApplicationUnderTest.SomeInputTag' at 1029;145.", repo.ApplicationUnderTest.SomeInputTagInfo, new RecordItemIndex(9));
                repo.ApplicationUnderTest.SomeInputTag.Click("1029;145");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'oRanges' with focus on 'ApplicationUnderTest.Target'.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Target.PressKeys("oRanges");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.Target'.", repo.ApplicationUnderTest.TargetInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Target.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
